#include <msp430.h>
#define ENABLE_RED 0xFFFE // Used to enable microcontroller's pins
#define RED_LED 0x0001 // P1.0 is the red LED
#define NO_LIGHT 0x0000
#define STOP_WATCHDOG 0x5A80 // Stop the watchdog
#define WDT_SETUP 0x5A24 // 1 sekunda, zegar ACLK	
#define WDT_ISRSTSOURCE 0x16

main()
{
    if(SYSRSTIV == WDT_ISRSTSOURCE)   //sysrstiv pokazuje przyczyne ostatniego resetu
    {                                 //0x16 oznacza timeout licznika WDT
        //tu wstawiacie co sie dzieje
        //po resecie przez wdt
        WDTCTL = STOP_WATCHDOG;       //moze byc inaczej w innej plytce patrz datasheet
        __delay_cycles(100000);
    }


 WDTCTL = STOP_WATCHDOG; //tu zatrzymuje WDT na czas inicjalizacji, można też odrazu go ustawic
 //inicjalizacja programu

 PM5CTL0 = ENABLE_RED;
 P1DIR = RED_LED;
 P1OUT = RED_LED;
 __delay_cycles(100000);
 P1OUT = NO_LIGHT;
 // ... robicie sobie dalej inicjalizacje
 //
 //koniec inicjalizacji

 WDTCTL = WDT_SETUP; //uruchomienie watchdoga
while(1)
{
    WDTCTL = WDTPW | WDTCNTCL; //resetowanie timera watchdoga - powinno by wrzucane w programie w taki sposób,
                               //żeby instrukcja była wykonana conajmniej raz na sekundę.
}
}